---
title: "Week 14: Web design and visualization"
---


This week is a more or less free week to discuss and work on anything from the class that we feel we want/need to go over. The current idea for the week is to go over styling for websites and polishing visualizations.

## Reading
- [Quarto documentation: HTML Themes](https://quarto.org/docs/output-formats/html-themes.html)
  - [More About Quarto Themes](https://quarto.org/docs/output-formats/html-themes-more.html)
- Samantha Csik, [Customizing Quarto Websites - Make your website stand out using SASS & CSS](https://ucsb-meds.github.io/customizing-quarto-websites/)
  - [GitHub repository](https://github.com/UCSB-MEDS/customizing-quarto-websites)

## Assignment
- Work on website project.

## Activities
Workshop: Publishing your website
Workshop: Designing websites

## Publishing your website on GitHub pages
- See also [Resources: Publishing Quarto websites with GitHub Pages](/resources.qmd#sec-quarto-publish)
- Documentation for the [publish command](https://quarto.org/docs/publishing/github-pages.html#publish-command) using the quarto command line interface.

### Setting up publish command
1. First, **make sure all changes are committed** on your project.
2. Create an empty `gh-pages` branch.
    1. `git checkout --orphan gh-pages`
    2. `git reset --hard`
    3. `git commit --allow-empty -m "Initialising gh-pages branch"`
    4. `git push origin gh-pages`
3. Check Settings -> Pages for **Source** branch on your [GitHub](https://github.com) repository.
4. Ignore `_site/` folder in git
    1. Add `/_site/` to `.gitignore` file.
    2. Remove any tracking of `_site/` in git: `git rm -r _site`
5. Publish through command line: `quarto publish gh-pages`

### What you should be doing to make changes to your website
1. Make the changes in RStudio.
2. `git add` and `git commit -m` changes.
3. Push changes to GitHub main branch: `git push origin main`
4. Publish changes by pushing to gh-pages branch: `quarto publish gh-pages`

## Designing Quarto websites
The basic styling of your website is done through [HTML theming](https://quarto.org/docs/output-formats/html-themes.html).

### Choose a Quarto theme
- Quarto HTML documents are all based on [Bootstrap 5](https://getbootstrap.com/).
- Quarto provides access to 25 [Bootswatch themes](https://bootswatch.com/).
- Change theme in `_quarto.yml` under `format:`

### Basic customization
- You can make basic changes to the theme in `_quarto.yml` under `format:`.
- See [basic customization](https://quarto.org/docs/output-formats/html-themes.html#basic-options) for available options.

### Customization with SCSS
- Create [fully custom themes](https://quarto.org/docs/output-formats/html-themes.html#custom-themes) with [SASS](https://sass-lang.com) variables through `scss` files. SASS is a superset of [CSS (Cascading Style Sheets)](https://developer.mozilla.org/en-US/docs/Web/CSS).
- This is done in a `styles.csss` or `custom.scss` file, which is listed under `theme:` in `_quarto.yml`.
- See [Quarto SASS variables](https://quarto.org/docs/output-formats/html-themes.html#sass-variables) for the most likely variables you might want to change.
- See [More About Quarto Themes](https://quarto.org/docs/output-formats/html-themes-more.html) on using SCSS.

## Resources: Website design
- Quarto websites are customizable through [HTML themes](https://quarto.org/docs/output-formats/html-themes.html).
- Joel Ross and Mike Freeman, [Client-Side Web Development](https://info340.github.io)
- [Bootstrap 5](https://getbootstrap.com/)
- [Bootswatch themes](https://bootswatch.com/)
- [SASS](https://sass-lang.com/guide/)
- [Mozilla Docs, CSS: Cascading Style Sheets](https://developer.mozilla.org/en-US/docs/Web/CSS)
